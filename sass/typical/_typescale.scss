// =============================================================================
// =Typical - Typescale
// =============================================================================

@import "aleksi/maps/map-depth";
@import "typical/setup/typescale";
@import "typical/breakpoint";
@import "typical/typesize";

// typical-typescale([ $font ])
// -----------------------------------------------------------------------------
/// @TODO: Accept a '$bp' arg, which returns all size values in that breakpoint.

@function typical-typescale($font: $typical-base-font)
{
  @return map-get($_typical-typescale, $font);
}

// typical-typescale([ $font ])
// -----------------------------------------------------------------------------

@mixin typical-typescale($font: $typical-base-font, $bp: 'base')
{
  $scale: typical-typescale($font);

  // if all breakpoints should be included,
  // and scale defines per-breakpoint sizes
  @if $bp == '*' and map-depth($scale) > 1
  {
    // include base scale (no media query)
    @include typical-typescale($font, 'base');

    // get all breakpoint names in the scale, but..
    $scale-bps: typical-breakpoint-names($scale);
    // loop through global breakpoints' list to conserve mobile-first order
    @each $bp in $_typical-breakpoint-names
    {
      // include typescale in all relevant breakpoints
      @if index($scale-bps, $bp)
      {
        @include typical-breakpoint($bp) {
          @include typical-typescale($font, $bp);
        }
      }
    }
  }

  @else {
    @each $size, $values in $scale
    {
      @at-root
      {
        #{&}-#{$size} {
          @include typical-typesize($size, $font, $bp);
        }
      }
    }
  }
}