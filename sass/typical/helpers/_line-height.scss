// =============================================================================
// =Typical - Line-height Helpers
// =============================================================================

@import "aleksi/lengths/convert";
@import "typical/setup/base";

@function convert-line-height($lh, $unit, $from: $base-font-size, $to: $from)
{
  $lh-unit: unit($lh);

  // if converting to unitless
  @if $unit == null or $unit == "" {
    @return if($lh-unit == "", $lh, convert-length($lh, unit($from), $from, $to));
  }

  // converting from unitless
  @if $lh-unit == "" {
    @return convert-length($lh * $from, $unit, $from, $to);
  }

  @return convert-length($lh, $unit, $from, $to);
}

// calc-line-height($fs, $min-gap: 0)
// -----------------------------------------------------------------------------
/// Calculates the minimum line-height for a given font-size and minimum
/// line-gap. Calculation is based on 'base-line-height'.
///
/// @param $fs - the $font-size with wich line-heigth will be used
/// @param $min-gap [0] - the minimum space between each line of text
///
/// @return line-height, in same unit as '$base-line-height'

@function calc-line-height($fs, $min-gap: 0)
{
  $base-fs: $base-font-size;
  $base-lh: $base-line-height;
  $base-fs-unit: unit($base-font-size);
  $base-lh-unit: unit($base-line-height);
  $min-gap-unit: unit($min-gap);

  // get base-line-height in same unit as base-font-size
  @if not $base-lh-unit {
    $base-lh: $base-fs * $base-lh;
  }

  @else if $base-lh-unit != $base-fs-unit {
    $base-lh: convert-line-height($base-lh, $base-fs-unit, $base-fs);
  }

  // get min line gap in same unit as base-font-size
  @if $min-gap-unit != $base-fs-unit {
    $min-gap: convert-length($min-gap, $base-fs-unit, $base-fs);
  }

  // get minimum line-height
  $min-lh: $fs + $min-gap;

  // get smallest valid line-height
  $lh: if($base-lh >= $min-lh, $base-lh, $min-lh);

  // transform back into 'base-line-height' unit
  @if not $base-lh-unit {
    // unitless line-height
    @return $lh / $base-fs;
  }

  // return in unit used by developer
  @return convert-line-height($lh, $base-lh-unit, $base-fs);
}